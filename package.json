{
  "name": "@ncino/status-list",
  "version": "0.0.1",
  "description": "Slackbot status reminders and updates",
  "repository": {
    "type": "git",
    "url": "https://github.com/ncino/hackathon-2022"
  },
  "bin": {
    "status-list": "dist/bin/status-list.js"
  },
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/"
  },
  "scripts": {
    "aws:deploy": "cdk deploy Status-List-IamStack-$(whoami) -c devMode=true -c suffix=$(whoami) -c deploymentStage=blue -c temporary=true --require-approval never",
    "aws:deploy:dev": "cdk deploy Status-List-IamStack-$(whoami) -c devMode=true -c suffix=$(whoami) -c deploymentStage=blue -c temporary=true -c ecrTag=$(whoami) --require-approval never",
    "aws:deploy:lambda:green": "cdk deploy Status-List-LambdaStack-$(whoami)-green -c devMode=true -c suffix=$(whoami) -c deploymentStage=green -c temporary=true --require-approval never",
    "aws:deploy:lambda:blue": "cdk deploy Status-List-LambdaStack-$(whoami)-blue -c devMode=true -c suffix=$(whoami) -c deploymentStage=blue -c temporary=true --require-approval never",
    "aws:deploy:pipeline": "cdk deploy Status-List-PipelineStack-$(whoami) -c devMode=true -c suffix=$(whoami) -c envName=dev -c temporary=true --require-approval never",
    "preaws:destroy": "./build/integration-test-cleanup.sh $(whoami) Status-List",
    "aws:destroy": "npm run aws:destroy:iam; npm run aws:destroy:api; npm run aws:destroy:functions; npm run aws:destroy:base;",
    "aws:destroy:api": "cdk destroy Status-List-ApiStack-$(whoami) -c devMode=true -c suffix=$(whoami) -c deploymentStage=blue -c temporary=true --force --require-approval never",
    "aws:destroy:base": "cdk destroy Status-List-BaseStack-$(whoami) -c devMode=true -c suffix=$(whoami) -c deploymentStage=blue -c temporary=true --force --require-approval never",
    "aws:destroy:functions": "cdk destroy Status-List-LambdaStack-$(whoami) -c devMode=true -c suffix=$(whoami) -c deploymentStage=blue -c temporary=true --force --require-approval never",
    "aws:destroy:iam": "cdk destroy Status-List-IamStack-$(whoami) -c devMode=true -c suffix=$(whoami) -c deploymentStage=blue -c temporary=true --force --require-approval never",
    "aws:destroy:pipeline": "cdk destroy Status-List-PipelineStack-$(whoami) -c devMode=true -c suffix=$(whoami) -c envName=dev --require-approval never",
    "aws:export:metadata": "./build/export-app-metadata.sh $(whoami)",
    "aws:export:swagger": "./build/export-swagger.sh $(whoami) blue",
    "prebuild": "rm -rf dist/ && npm run format",
    "build": "npm run build:lambda && tsc",
    "prebuild:stacks": "rm -rf dist/ && npm run format",
    "build:stacks": "tsc",
    "build:lambda": "npm run build:functions",
    "build:functions": "./build/build-lambda-functions.sh",
    "format": "eslint . --fix --ext .js,.ts",
    "lint": "eslint . --ext .js,.ts --quiet",
    "npm:auth": "echo \"//npm.pkg.github.com/:_authToken=${GITHUB_PERSONAL_TOKEN:-$GITHUB_TOKEN}\" > $HOME/.npmrc",
    "test": "jest --colors",
    "test:coverage": "jest --coverage",
    "pretest:integration": "npm run aws:export:metadata && ./build/integration-test-setup.sh $(whoami) Status-List",
    "test:integration": "jest --config jest.config.integration.js --env=node --colors --runInBand",
    "posttest:integration": "./build/integration-test-cleanup.sh $(whoami) Status-List",
    "pretest:on-demand": "npm run aws:export:metadata && ./build/integration-test-setup.sh $(whoami) Status-List",
    "test:on-demand": "jest --config jest.config.on-demand.js --env=node",
    "posttest:on-demand": "./build/integration-test-cleanup.sh $(whoami) Status-List",
    "sam:newFunction": "npm run build:functions newFunction && sam local invoke newFunction --event ./src/lambda-functions/newFunction/src/event.json",
    "semantic-release": "npx semantic-release",
    "watch": "tsc -w"
  },
  "devDependencies": {
    "@aws-cdk/assert": "1.130.0",
    "@babel/runtime": "^7.10.1",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/exec": "^5.0.0",
    "@semantic-release/git": "^9.0.0",
    "@semantic-release/github": "^7.2.0",
    "@semantic-release/npm": "^7.0.9",
    "@types/jest": "^27.4.1",
    "@types/node": "17.0.21",
    "@typescript-eslint/eslint-plugin": "^2.34.0",
    "@typescript-eslint/parser": "^2.34.0",
    "aws-api-gateway-client": "^0.3.3",
    "aws-cdk": "1.130.0",
    "eslint": "^7.0.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.1.3",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-unused-imports": "^0.1.3",
    "jest": "^25.3.0",
    "jest-junit": "^10.0.0",
    "prettier": "^2.0.5",
    "semantic-release": "^17.3.1",
    "ts-jest": "^28.0.1",
    "ts-node": "^10.8.1",
    "typescript": "~4.7.3"
  },
  "dependencies": {
    "@aws-cdk/aws-apigateway": "1.130.0",
    "@aws-cdk/aws-iam": "1.130.0",
    "@aws-cdk/core": "1.130.0",
    "@ncino/aws-cdk": "2.15.3",
    "@ncino/aws-sdk": "1.2.2",
    "aws-sdk": "^2.704.0",
    "aws-xray-sdk-core": "^3.3.2",
    "source-map-support": "^0.5.16"
  }
}
